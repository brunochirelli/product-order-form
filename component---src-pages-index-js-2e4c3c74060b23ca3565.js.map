{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["title","SEO","description","lang","meta","site","metaDescription","htmlAttributes","titleTemplate","name","content","property","author"],"mappings":"gUAAA,4CAUA,UAPkB,kBAChB,6BACE,uBAAKA,MAAM,SACX,6BAHc,Y,mFCSlB,SAASC,EAAI,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMJ,EAAS,EAATA,MAC9BK,EADuC,YAezCC,EAAkBJ,GAAeG,eAAvC,YAEA,OACE,uBACEE,eAAgB,CACdJ,QAEFH,MAJF,EAKEQ,cAAa,QAAUH,eALzB,MAMED,KAAM,CACJ,CACEK,KADF,cAEEC,QAASJ,GAEX,CACEK,SADF,WAEED,QAASV,GAEX,CACEW,SADF,iBAEED,QAASJ,GAEX,CACEK,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,QAASL,eAAkBO,QAE7B,CACEH,KADF,gBAEEC,QAASV,GAEX,CACES,KADF,sBAEEC,QAASJ,IA/BP,YAsCZL,eAAmB,CACjBE,KADiB,KAEjBC,KAFiB,GAGjBF,YAAY,IAUd","file":"component---src-pages-index-js-2e4c3c74060b23ca3565.js","sourcesContent":["import React from 'react';\r\nimport SEO from '../components/seo';\r\n\r\nconst IndexPage = () => (\r\n  <div>\r\n    <SEO title=\"Home\" />\r\n    <div>Index</div>\r\n  </div>\r\n);\r\n\r\nexport default IndexPage;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}